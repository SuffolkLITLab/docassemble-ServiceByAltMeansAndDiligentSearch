---
include:
  - docassemble.AssemblyLine:assembly_line.yml
  - docassemble.MassAccess:massaccess.yml
  - user_information.yml
  - about_the_case.yml
  - search_questions.yml
  - review_screens.yml
---
comment: |
  The metadata section controls the tab title and saved interview title. You can delete this section if you include this YAML file in another YAML file.
metadata:
  title: |
    Motion For Service By Alternate Means and Affidavit of Diligent Search
  short title: |
    Service by Alternate Means and Diligent Search
---

mandatory: True
code: |
  interview_metadata # make sure we initialize the object
  if not defined("interview_metadata['service_by_alternate_means_diligent_search']"):
    interview_metadata.initializeObject('service_by_alternate_means_diligent_search')
  interview_metadata['service_by_alternate_means_diligent_search'].update({
    'title': 'Motion For Service By Alternate Means and Affidavit of Diligent Search',
    'short title': 'Service by Alternate Means and Diligent Search',
    'description': 'If the sheriff could not serve the defendant with a Divorce / Separate Support Summons in person or if you do not know where the Defendant lives, ask the court for an order for Alternate Service by Publication and Mailing. This order tells you to publish the summons in the newspaper and mail the summons and complaint to the defendant at the last address you have for him or her.',
    'original_form': 'https://www.masslegalhelp.org/family/cjp31-motion-for-service-by-alternate-means-and-affidavit-of-diligent-search-sample.pdf',
    'allowed courts': [
      'Probate and Family Court',
    ],
    'categories': [
      'Family Law',
    ],
    'logic block variable': 'service_by_alternate_means_diligent_search',
    'attachment block variable': 'service_by_alternate_means_diligent_search_attachment',
    'typical role': 'plaintiff',
  })
---
features: 
  navigation: True
---
sections:
  - review_service_by_alternate_means_diligent_search: Review your answers
---
mandatory: True
id: order block
code: |
  # This is a placeholder to control logic flow in this interview

  basic_questions_intro_screen 
  service_by_alternate_means_diligent_search_intro
  # Set the preferred/allowed courts for this interview
  allowed_courts = interview_metadata["service_by_alternate_means_diligent_search"]["allowed courts"]
  nav.set_section('review_service_by_alternate_means_diligent_search')
  if not form_selector:
    kick_out_other_form
  # user_is
  #users.ask_number = True 
  users.target_number = 1
  open_case
  if open_case:
    docket_number
  else: 
    docket_number = ' '
  service_request
  user_ask_role = 'plaintiff'
  users[0].name.first
  str(users[0])
  users[0].address.city
  other_parties[0].person_type = 'individual'
  case_name
  str(defendants[0])
  #if correct_case_name: 
  #  case_name = ask_case
  #else: 
  #  case_name = correct_case
  if not address_unknown:
    if address_date_not_known:
      address_date_guess
  last_contact_unknown
  if military_check == True and military_question == True:
    record_request.file
  if not military_check:
    check_phone
  check_phone
  check_text
  if check_phone == True:
    call_response
  if check_text == True:
    text_response
  if check_email:
    email_response
  if social_check:
    social_media_site1
  if internet_search_check:
    website_name1
  if friends_family_check:
    friend_contacted1
  if other_contact_check:
    other_contact_info
  service_attempted
  # BBO_number
  str(courts[0])
  courts[0].division
  signature_date
  service_by_alternate_means_diligent_search_preview_question # Pre-canned preview screen
  basic_questions_signature_flow
  users[0].signature
  service_by_alternate_means_diligent_search = True
  #if is_attorney:
  #  attorney_name_full
  # users[0].phone_number
  download_service_by_alternate_means_diligent_search
---
comment: |
  This question is used to introduce your interview. Please customize
id: intro to form
continue button field: service_by_alternate_means_diligent_search_intro
question: |
  Motion For Service By Alternate Means and Affidavit of Diligent Search
subquestion: |
  Use this form to ask the court for an order for Alternate Service by Publication and Mailing if you do not know where the Defendant lives or if the sheriff could not serve the defendant in person.
  
   Probate and Family courts across Massachusetts do not all use the same forms. **Before you begin this form**, call the clerk at the court that is hearing your case and ask the clerk your which form you should use:
   
  * The Motion for Service by Alternate Means and Affidavit of Diligent Search; **or**
   
  * The Motion for Alternate Service by Publication and Mailing and the Affidavit in Support of Motion for Alternate Service. 
     
help: 
  label: Which court do I contact? 
  heading: Which court do I contact? 
  content: |
    ### How to decide which court to contact
   
    The court you will file your case in depends on:
    
      * The type of case you are filing  **and,**
      * Where you and the other party currently live.
         
    Sometimes you file the case in the Family and Probate Court in the county:
    
      * Where you live.
      * Where the other party lives.
         
    If you are not sure where to file your case, ask the virtual Lawyer for the Day or a court clerk. Call your local [Probate and Family Court](https://www.mass.gov/orgs/probate-and-family-court/locations?_page=1) to ask the hours of the virtual Lawyer for the Day Program. 
    
    If there is no Lawyer for the Day program, ask to talk to someone in the clerkâ€™s office. Filing your case in the wrong court could lead to many delays.

    Find the [Probate and Family Court](https://www.mass.gov/orgs/probate-and-family-court/locations?_page=1) in your county.
    
    If you are responding to a case someone else filed, select the court that is already listed on your court paperwork.
---
id: form selecton 
question: | 
  What form did the clerk tell you to use? 
subquestion: | 
  Call the court and ask the clerk. 
field: form_selector 
choices: 
  - "Service by Alternate Means and Affidavit of Diligent Search": True
  -  "Alternate Service by Publication and Mailing and the Affidavit in Support of Motion for Alternate Service": False 
---
id: kick out other form
event: kick_out_other_form
question: |
  Sorry
subquestion: |
  You said the court uses "The Motion for Alternate Service by Publication and Mailing and the Affidavit in Support of Motion for Alternate Service."
  
  We can only help if the court uses The Motion for Service by Alternate Means and Affidavit of Diligent Search .  
  
   To find the Motion for Alternate Service by Publication and Mailing and the Affidavit in Support of Motion for Alternate Service tap [here](https://www.masslegalhelp.org/family/cjd400-motion-for-alternate-service-and-affidavit.pdf).
  
  Learn more about alternative service:  
  
  * [Alternate Service of Divorce/Separate Support Summons](https://www.masslegalhelp.org/children-and-families/probate-and-family-court/service/publication).
buttons: 
  - Exit: exit
    url: https://massaccess.suffolklitlab.org/
  - Restart: restart
---
id: Placeholder preview screen
continue button field: service_by_alternate_means_diligent_search_preview_question
question: |
  Review your document before you sign it
subquestion: |
  Here is a preview of the form you'll sign on the next page. 
  
  ${ service_by_alternate_means_diligent_search_attachment.as_pdf(key='preview') }
---
progress: 100
continue button field: download_service_by_alternate_means_diligent_search
id: download screen
question: |
  Your document is ready
subquestion: |
  
  ### Next steps
  
  1. Download and print out the PDF.
  2. Mail or bring the document to the court where you are filing.
 
  ${ al_user_bundle.download_list_html() }
  
---
objects:
  - service_by_alternate_means_diligent_search_attachment: ALDocument.using(title="Service by alternate means", filename="Service_by_Alternate_Means_and_Diligent_Search", enabled=True, has_addendum=False)
  - record_request: ALDocumentUpload.using(title="Record request", filename="record_request")
---
code: |
  record_request.enabled = military_check and military_question
---
objects:
  - al_user_bundle: ALDocumentBundle.using(elements=[service_by_alternate_means_diligent_search_attachment, record_request], enabled=True, title="Documents for your records", filename="Service_by_Alternate_Means_and_Diligent_Search")
  - al_court_bundle: ALDocumentBundle.using(elements=[service_by_alternate_means_diligent_search_attachment, record_request], enabled=True, title="Documents for your records", filename="Service_by_Alternate_Means_and_Diligent_Search")
---
need: text_phone_response
attachment:
    variable name: service_by_alternate_means_diligent_search_attachment[i]
    name: Service by Alternate Means and Diligent Search
    filename: Service_by_Alternate_Means_and_Diligent_Search
    skip undefined: True
    pdf template file: service_by_alternate_means_diligent_search.pdf
    fields: 
      - "court_name": ${ str(courts[0]) }
      - "court_division": ${ courts[0].division }
      - "defendant_name": ${ str(defendants[0]) }
      - "address_unknown": ${ address_unknown }
      - "defendant_address_street": ${ other_parties[0].address.line_one() }
      - "defendant_city": ${other_parties[0].address.city}
      - "defendant_state": ${other_parties[0].address.state}
      - "defendant_zip": ${other_parties[0].address.zip}
      - "other_parties[0].phone_number": ${ other_parties[0].phone_number }
      - "other_parties[0].email": ${ other_parties[0].email }
      - "docket_number": ${ docket_number}
      # If it is a signature, test which file version we're expecting. leave it empty unless it's the final attachment version
      - "user_signature": ${ users[0].signature if i == 'final' else '' }
      - "signature_date": ${ signature_date }
      - "user_name": ${ str(users[0]) }
      - "user_address": ${users[0].address.address }
      - "user_address_unit": ${users[0].address_unit}
      - "user_address_city": ${ users[0].address.city }
      - "user_address_state": ${ users[0].address.state }
      - "user_address_zip": ${ users[0].address.zip }
      - "attorney_phone": ${ attorney_phone }
      - "attorney_email":  ${ attorney_email }
      - "user_email": ${ users[0].email }
      - "case_name": ${ case_name or corrected_case_name }
      - "publication_only": ${ service_request == "publication_only" }
      - "publication_mail": ${ service_request == "publication_mail" }
      - "other_means": ${ service_request == "other_means" }
      - "specify_service": ${ service_request == "other_means" and means_specified == 'specify_service' }
      - "instruct_service": ${ service_request == "other_means" and means_specified == instruct_service }
      - "specify_info": ${ specify_info }
      - "date_last_known": | 
          % if not address_unknown:
          % if address_date_not_known:
          ${ address_date_guess }
          % else:
          ${ format_date(address_date, format='MM/dd/yyyy') }
          % endif
          % endif
      - "last_contact_date": |
          % if last_contact_unknown: 
          ${ last_contact_guess }
          % else: 
          ${ format_date(last_contact_date, format='MM/dd/yyyy') }
          % endif
      - "check_phone_text": ${ check_phone or check_text }
      - "phone_response": ${ text_phone_response }
      - "check_email": ${ check_email }
      - "email_response": ${ email_response }
      - "social_check": ${ social_check }
      - "social_media_site1": ${ social_media_site1 }
      - "social_date1": ${ social_date1 }
      - "social_response1": ${ social_response1 }
      - "social_media_site2": ${ social_media_site2 }
      - "social_date2": ${ social_date2 }
      - "social_response2": ${ social_response2 }
      - "internet_search_check": ${ internet_search_check }
      - "website_name1": ${ website_name1 }
      - "website_date1": ${ website_date1 }
      - "website_response1": ${ website_response1 }
      - "website_name2": ${ website_name2 }
      - "website_date2": ${ website_date2 }
      - "website_response2": ${ website_response2 }
      - "child_support_check": ${ child_support_check }
      - "friends_family_check": ${ friends_family_check }
      - "friend_contacted1": ${ friend_contacted1 }
      - "relationship_name1": ${ relationship_name1 }
      - "relationship_date1": ${ relationship_date1 }
      - "relationship_info1": ${ relationship_info1 }
      - "friend_contacted2": ${ friend_contacted2 }
      - "relationship_name2": ${ relationship_name2 }
      - "relationship_date2": ${ relationship_date2 }
      - "relationship_info2": ${ relationship_info2 }
      - "military_check": ${ military_check }
      - "other_contact_check": ${ other_contact_check }
      - "other_contact_info": ${ other_contact_info }
      - "sheriff_check": ${service_attempted == 'sheriff_check' }
      - "no_attempt_check": ${ service_attempted == 'no_attempt_check' }
      - "BBO_number": ${ BBO_number }
---
template: text_phone_response
content: |
  % if check_phone == True:
  ${ fix_punctuation(call_response) } 
  % endif
  % if check_text == True:
  ${ text_response }
  % endif
---
id: review screens
event: review_service_by_alternate_means_diligent_search
question: |
  Review your answers
subquestion: |
  Edit your answers below
review: 
  - Edit: case_name
    button: |
      case name:
      ${ case_name }
  - Edit: publication_only
    button: |
      Publication only:
      ${ word(yesno(publication_only)) }
  - Edit: publication_mail
    button: |
      Publication mail:
      ${ word(yesno(publication_mail)) }
  - Edit: other_means
    button: |
      Other means:
      ${ word(yesno(other_means)) }
  - Edit: specify_service
    button: |
      Specify service:
      ${ word(yesno(specify_service)) }
  - Edit: instruct_service
    button: |
      Instruct service:
      ${ word(yesno(instruct_service)) }
  - Edit: specify_info
    button: |
      Specify info:
      ${ specify_info }
  - Edit: address_unknown
    button: |
      Address unknown:
      ${ word(yesno(address_unknown)) }
  - Edit: defendant_city
    button: |
      Defendant city:
      ${ defendant_city }
  - Edit: defendant_state
    button: |
      Defendant state:
      ${ defendant_state }
  - Edit: defendant_zip
    button: |
      Defendant zip:
      ${ defendant_zip }
  - Edit: address_date
    button: |
      Date last known:
      ${ address_date }
  - Edit: last_contact_date
    button: |
      Date of last contact:
      ${ last_contact_date.format() }
  - Edit: check_phone_text
    button: |
      Check phone text:
      ${ word(yesno(check_phone_text)) }
  - Edit: phone_response
    button: |
      Phone response:
      ${ phone_response }
  - Edit: check_email
    button: |
      Check email:
      ${ word(yesno(check_email)) }
  - Edit: email_response
    button: |
      Email response:
      ${ email_response }
  - Edit: social_check
    button: |
      Social check:
      ${ word(yesno(social_check)) }
  - Edit: social_media_site1
    button: |
      Social media site1:
      ${ social_media_site1 }
  - Edit: social_date1
    button: |
      Social date1:
      ${ social_date1 }
  - Edit: social_response1
    button: |
      Social response1:
      ${ social_response1 }
  - Edit: social_media_site2
    button: |
      Social media site2:
      ${ social_media_site2 }
  - Edit: social_date2
    button: |
      Social date2:
      ${ social_date2 }
  - Edit: social_response2
    button: |
      Social response2:
      ${ social_response2 }
  - Edit: internet_search_check
    button: |
      Internet search check:
      ${ word(yesno(internet_search_check)) }
  - Edit: website_name1
    button: |
      Website name1:
      ${ website_name1 }
  - Edit: website_date1
    button: |
      Website date1:
      ${ website_date1 }
  - Edit: website_response1
    button: |
      Website response1:
      ${ website_response1 }
  - Edit: website_name2
    button: |
      Website name2:
      ${ website_name2 }
  - Edit: website_date2
    button: |
      Website date2:
      ${ website_date2 }
  - Edit: website_response2
    button: |
      Website response2:
      ${ website_response2 }
  - Edit: child_support_check
    button: |
      Child support check:
      ${ word(yesno(child_support_check)) }
  - Edit: friends_family_check
    button: |
      Friends family check:
      ${ word(yesno(friends_family_check)) }
  - Edit: friend_contacted1
    button: |
      Friend contacted1:
      ${ friend_contacted1 }
  - Edit: relationship_name1
    button: |
      Relationship name1:
      ${ relationship_name1 }
  - Edit: relationship_date1
    button: |
      Relationship date1:
      ${ relationship_date1 }
  - Edit: relationship_info1
    button: |
      Relationship info1:
      ${ relationship_info1 }
  - Edit: friend_contacted2
    button: |
      Friend contacted2:
      ${ friend_contacted2 }
  - Edit: relationship_name2
    button: |
      Relationship name2:
      ${ relationship_name2 }
  - Edit: relationship_date2
    button: |
      Relationship date2:
      ${ relationship_date2 }
  - Edit: relationship_infor2
    button: |
      Relationship infor2:
      ${ relationship_infor2 }
  - Edit: military_check
    button: |
      Military check:
      ${ word(yesno(military_check)) }
  - Edit: other_contact_check
    button: |
      Other contact check:
      ${ word(yesno(other_contact_check)) }
  - Edit: sheriff_check
    button: |
      Sheriff check:
      ${ word(yesno(sheriff_check)) }
  - Edit: no_attempt_check
    button: |
      No attempt check:
      ${ word(yesno(no_attempt_check)) }
  - Edit: BBO_number
    button: |
      Bbo number:
      ${ BBO_number }
  - Edit: docket_number_2
    button: |
      ${ docket_number_2 }
  - Edit: courts[0]
    button: |
      ${ courts[0] }
  - Edit: courts[0].division
    button: |
      ${ courts[0].division }
  - Edit: defendants[0]
    button: |
      ${ defendants[0] }
  - Edit: defendants[0].address.address
    button: |
      ${ defendants[0].address.address }
  - Edit: defendants[0].phone_number
    button: |
      ${ defendants[0].phone_number }
  - Edit: defendants[0].email
    button: |
      ${ defendants[0].email }
  - Edit: docket_number_1
    button: |
      ${ docket_number_1 }
  - Edit: docket_number3
    button: |
      ${ docket_number_3 }
  - Edit: users[0].signature
    button: |
      ${ users[0].signature }
  - Edit: signature_date
    button: |
      ${ signature_date }
  - Edit: users[0]
    button: |
      ${ users[0] }
  - Edit: users[0].address.city
    button: |
      ${ users[0].address.city }
  - Edit: users[0].address.state
    button: |
      ${ users[0].address.state }
  - Edit: users[0].address.zip
    button: |
      ${ users[0].address.zip }
  - Edit: users[0].phone_number
    button: |
      ${ users[0].phone_number }
  - Edit: users[0].email
    button: |
      ${ users[0].email }
      
 